					; Symbols : 
					; 0 - add-op
					; 1 - sub-op
					; 2 - mul-op
					; 3 - div-op
					; Labels :
					; 0 compute add ok
					; 1 compute sub ok
					; 2 nil
					; 3 add
					; 4 sub
					; 5 compute

(setq codecompute-sub-5-3 '((push (:const 1))
			    (push (:const 5))
			    (push (:const 3))
			    (move sp fp)
			    (push (:const 3))
			    (jsr 5)
			    (add (:const -3) fp)
			    (add (:const -4) sp)
			    (move R0 R0)
			    (halt)
			    (label 5)
			    (cmp (:const 0) (fp -3))
			    (jeq 0)
			    (cmp (:const 1) (fp -3))
			    (jeq 1)
			    (move (:const -1) R0)
			    (jmp 2)
			    (label 0)
			    (push (fp -2))
			    (push (fp -1))
			    (move sp fp)
			    (push (:const 2))
			    (jsr 3)
			    (add (:const -2) fp)
			    (add (:const -3) sp)
			    (move R0 R0)
			    (jmp 2)
			    (label 1)
			    (push (fp -2))
			    (push (fp -1))
			    (move sp fp)
			    (push (:const 2))
			    (jsr 4)
			    (add (:const -2) fp)
			    (add (:const -3) sp)
			    (jmp 2)
			    (label 2)
			    (rtn)
			    (label 3)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (add R1 R0)
			    (rtn)
			    (label 4)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (sub R1 R0)
			    (rtn)
			    (label mul)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (mul R1 R0)
			    (rtn)
			    (label div)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (div R1 R0)
			    (rtn)))

;; + 1 2
(setq codecompute-add-1-2 '((push (:const 1))
			    (push (:const 5))
			    (push (:const 3))
			    (move sp fp)
			    (push (:const 3))
			    (jsr 5)
			    (add (:const -3) fp)
			    (add (:const -4) sp)
			    (move R0 R0)
			    (halt)
			    (label 5)
			    (cmp (:const 0) (fp -3))
			    (jeq 0)
			    (cmp (:const 1) (fp -3))
			    (jeq 1)
			    (move (:const -1) R0)
			    (jmp 2)
			    (label 0)
			    (push (fp -2))
			    (push (fp -1))
			    (move sp fp)
			    (push (:const 2))
			    (jsr 3)
			    (add (:const -2) fp)
			    (add (:const -3) sp)
			    (move R0 R0)
			    (jmp 2)
			    (label 1)
			    (push (fp -2))
			    (push (fp -1))
			    (move sp fp)
			    (push (:const 2))
			    (jsr 4)
			    (add (:const -2) fp)
			    (add (:const -3) sp)
			    (jmp 2)
			    (label 2)
			    (rtn)
			    (label 3)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (add R1 R0)
			    (rtn)
			    (label 4)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (sub R1 R0)
			    (rtn)
			    (label mul)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (mul R1 R0)
			    (rtn)
			    (label div)
			    (move (fp -2) R1)
			    (move (fp -1) R0)
			    (div R1 R0)
			    (rtn)))
